// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_api.proto

#ifndef PROTOBUF_INCLUDED_test_5fapi_2eproto
#define PROTOBUF_INCLUDED_test_5fapi_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_test_5fapi_2eproto 

namespace protobuf_test_5fapi_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_test_5fapi_2eproto
namespace LunaSDKService {
class FaceFountAttribute;
class FaceFountAttributeDefaultTypeInternal;
extern FaceFountAttributeDefaultTypeInternal _FaceFountAttribute_default_instance_;
class HeadPoseFaceFountAttribute;
class HeadPoseFaceFountAttributeDefaultTypeInternal;
extern HeadPoseFaceFountAttributeDefaultTypeInternal _HeadPoseFaceFountAttribute_default_instance_;
class Image;
class ImageDefaultTypeInternal;
extern ImageDefaultTypeInternal _Image_default_instance_;
class ImageProccesing;
class ImageProccesingDefaultTypeInternal;
extern ImageProccesingDefaultTypeInternal _ImageProccesing_default_instance_;
class ImageProccessingResult;
class ImageProccessingResultDefaultTypeInternal;
extern ImageProccessingResultDefaultTypeInternal _ImageProccessingResult_default_instance_;
class QualityFaceFountAttribute;
class QualityFaceFountAttributeDefaultTypeInternal;
extern QualityFaceFountAttributeDefaultTypeInternal _QualityFaceFountAttribute_default_instance_;
class Rectangle;
class RectangleDefaultTypeInternal;
extern RectangleDefaultTypeInternal _Rectangle_default_instance_;
}  // namespace LunaSDKService
namespace google {
namespace protobuf {
template<> ::LunaSDKService::FaceFountAttribute* Arena::CreateMaybeMessage<::LunaSDKService::FaceFountAttribute>(Arena*);
template<> ::LunaSDKService::HeadPoseFaceFountAttribute* Arena::CreateMaybeMessage<::LunaSDKService::HeadPoseFaceFountAttribute>(Arena*);
template<> ::LunaSDKService::Image* Arena::CreateMaybeMessage<::LunaSDKService::Image>(Arena*);
template<> ::LunaSDKService::ImageProccesing* Arena::CreateMaybeMessage<::LunaSDKService::ImageProccesing>(Arena*);
template<> ::LunaSDKService::ImageProccessingResult* Arena::CreateMaybeMessage<::LunaSDKService::ImageProccessingResult>(Arena*);
template<> ::LunaSDKService::QualityFaceFountAttribute* Arena::CreateMaybeMessage<::LunaSDKService::QualityFaceFountAttribute>(Arena*);
template<> ::LunaSDKService::Rectangle* Arena::CreateMaybeMessage<::LunaSDKService::Rectangle>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace LunaSDKService {

// ===================================================================

class Image : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LunaSDKService.Image) */ {
 public:
  Image();
  virtual ~Image();

  Image(const Image& from);

  inline Image& operator=(const Image& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Image(Image&& from) noexcept
    : Image() {
    *this = ::std::move(from);
  }

  inline Image& operator=(Image&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Image& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Image* internal_default_instance() {
    return reinterpret_cast<const Image*>(
               &_Image_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Image* other);
  friend void swap(Image& a, Image& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Image* New() const final {
    return CreateMaybeMessage<Image>(NULL);
  }

  Image* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Image>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Image& from);
  void MergeFrom(const Image& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Image* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes image_date = 4;
  void clear_image_date();
  static const int kImageDateFieldNumber = 4;
  const ::std::string& image_date() const;
  void set_image_date(const ::std::string& value);
  #if LANG_CXX11
  void set_image_date(::std::string&& value);
  #endif
  void set_image_date(const char* value);
  void set_image_date(const void* value, size_t size);
  ::std::string* mutable_image_date();
  ::std::string* release_image_date();
  void set_allocated_image_date(::std::string* image_date);

  // int32 width = 1;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 height = 2;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // int32 image_date_size = 3;
  void clear_image_date_size();
  static const int kImageDateSizeFieldNumber = 3;
  ::google::protobuf::int32 image_date_size() const;
  void set_image_date_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LunaSDKService.Image)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr image_date_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 image_date_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_test_5fapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImageProccesing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LunaSDKService.ImageProccesing) */ {
 public:
  ImageProccesing();
  virtual ~ImageProccesing();

  ImageProccesing(const ImageProccesing& from);

  inline ImageProccesing& operator=(const ImageProccesing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageProccesing(ImageProccesing&& from) noexcept
    : ImageProccesing() {
    *this = ::std::move(from);
  }

  inline ImageProccesing& operator=(ImageProccesing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageProccesing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageProccesing* internal_default_instance() {
    return reinterpret_cast<const ImageProccesing*>(
               &_ImageProccesing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ImageProccesing* other);
  friend void swap(ImageProccesing& a, ImageProccesing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageProccesing* New() const final {
    return CreateMaybeMessage<ImageProccesing>(NULL);
  }

  ImageProccesing* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImageProccesing>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImageProccesing& from);
  void MergeFrom(const ImageProccesing& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageProccesing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LunaSDKService.Image Photo = 2;
  bool has_photo() const;
  void clear_photo();
  static const int kPhotoFieldNumber = 2;
  private:
  const ::LunaSDKService::Image& _internal_photo() const;
  public:
  const ::LunaSDKService::Image& photo() const;
  ::LunaSDKService::Image* release_photo();
  ::LunaSDKService::Image* mutable_photo();
  void set_allocated_photo(::LunaSDKService::Image* photo);

  // int32 ID_Request = 1;
  void clear_id_request();
  static const int kIDRequestFieldNumber = 1;
  ::google::protobuf::int32 id_request() const;
  void set_id_request(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LunaSDKService.ImageProccesing)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LunaSDKService::Image* photo_;
  ::google::protobuf::int32 id_request_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_test_5fapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QualityFaceFountAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LunaSDKService.QualityFaceFountAttribute) */ {
 public:
  QualityFaceFountAttribute();
  virtual ~QualityFaceFountAttribute();

  QualityFaceFountAttribute(const QualityFaceFountAttribute& from);

  inline QualityFaceFountAttribute& operator=(const QualityFaceFountAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QualityFaceFountAttribute(QualityFaceFountAttribute&& from) noexcept
    : QualityFaceFountAttribute() {
    *this = ::std::move(from);
  }

  inline QualityFaceFountAttribute& operator=(QualityFaceFountAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QualityFaceFountAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QualityFaceFountAttribute* internal_default_instance() {
    return reinterpret_cast<const QualityFaceFountAttribute*>(
               &_QualityFaceFountAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(QualityFaceFountAttribute* other);
  friend void swap(QualityFaceFountAttribute& a, QualityFaceFountAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QualityFaceFountAttribute* New() const final {
    return CreateMaybeMessage<QualityFaceFountAttribute>(NULL);
  }

  QualityFaceFountAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QualityFaceFountAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QualityFaceFountAttribute& from);
  void MergeFrom(const QualityFaceFountAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QualityFaceFountAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double dark = 1;
  void clear_dark();
  static const int kDarkFieldNumber = 1;
  double dark() const;
  void set_dark(double value);

  // double ligth = 2;
  void clear_ligth();
  static const int kLigthFieldNumber = 2;
  double ligth() const;
  void set_ligth(double value);

  // double gray = 3;
  void clear_gray();
  static const int kGrayFieldNumber = 3;
  double gray() const;
  void set_gray(double value);

  // double blur = 4;
  void clear_blur();
  static const int kBlurFieldNumber = 4;
  double blur() const;
  void set_blur(double value);

  // double quality = 5;
  void clear_quality();
  static const int kQualityFieldNumber = 5;
  double quality() const;
  void set_quality(double value);

  // double threshold = 6;
  void clear_threshold();
  static const int kThresholdFieldNumber = 6;
  double threshold() const;
  void set_threshold(double value);

  // @@protoc_insertion_point(class_scope:LunaSDKService.QualityFaceFountAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double dark_;
  double ligth_;
  double gray_;
  double blur_;
  double quality_;
  double threshold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_test_5fapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeadPoseFaceFountAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LunaSDKService.HeadPoseFaceFountAttribute) */ {
 public:
  HeadPoseFaceFountAttribute();
  virtual ~HeadPoseFaceFountAttribute();

  HeadPoseFaceFountAttribute(const HeadPoseFaceFountAttribute& from);

  inline HeadPoseFaceFountAttribute& operator=(const HeadPoseFaceFountAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeadPoseFaceFountAttribute(HeadPoseFaceFountAttribute&& from) noexcept
    : HeadPoseFaceFountAttribute() {
    *this = ::std::move(from);
  }

  inline HeadPoseFaceFountAttribute& operator=(HeadPoseFaceFountAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeadPoseFaceFountAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeadPoseFaceFountAttribute* internal_default_instance() {
    return reinterpret_cast<const HeadPoseFaceFountAttribute*>(
               &_HeadPoseFaceFountAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(HeadPoseFaceFountAttribute* other);
  friend void swap(HeadPoseFaceFountAttribute& a, HeadPoseFaceFountAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeadPoseFaceFountAttribute* New() const final {
    return CreateMaybeMessage<HeadPoseFaceFountAttribute>(NULL);
  }

  HeadPoseFaceFountAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeadPoseFaceFountAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeadPoseFaceFountAttribute& from);
  void MergeFrom(const HeadPoseFaceFountAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeadPoseFaceFountAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float pitch = 1;
  void clear_pitch();
  static const int kPitchFieldNumber = 1;
  float pitch() const;
  void set_pitch(float value);

  // float yam = 2;
  void clear_yam();
  static const int kYamFieldNumber = 2;
  float yam() const;
  void set_yam(float value);

  // float rool = 3;
  void clear_rool();
  static const int kRoolFieldNumber = 3;
  float rool() const;
  void set_rool(float value);

  // @@protoc_insertion_point(class_scope:LunaSDKService.HeadPoseFaceFountAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float pitch_;
  float yam_;
  float rool_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_test_5fapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Rectangle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LunaSDKService.Rectangle) */ {
 public:
  Rectangle();
  virtual ~Rectangle();

  Rectangle(const Rectangle& from);

  inline Rectangle& operator=(const Rectangle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rectangle(Rectangle&& from) noexcept
    : Rectangle() {
    *this = ::std::move(from);
  }

  inline Rectangle& operator=(Rectangle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Rectangle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rectangle* internal_default_instance() {
    return reinterpret_cast<const Rectangle*>(
               &_Rectangle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Rectangle* other);
  friend void swap(Rectangle& a, Rectangle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rectangle* New() const final {
    return CreateMaybeMessage<Rectangle>(NULL);
  }

  Rectangle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rectangle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rectangle& from);
  void MergeFrom(const Rectangle& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rectangle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // int32 width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LunaSDKService.Rectangle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_test_5fapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FaceFountAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LunaSDKService.FaceFountAttribute) */ {
 public:
  FaceFountAttribute();
  virtual ~FaceFountAttribute();

  FaceFountAttribute(const FaceFountAttribute& from);

  inline FaceFountAttribute& operator=(const FaceFountAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaceFountAttribute(FaceFountAttribute&& from) noexcept
    : FaceFountAttribute() {
    *this = ::std::move(from);
  }

  inline FaceFountAttribute& operator=(FaceFountAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceFountAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaceFountAttribute* internal_default_instance() {
    return reinterpret_cast<const FaceFountAttribute*>(
               &_FaceFountAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(FaceFountAttribute* other);
  friend void swap(FaceFountAttribute& a, FaceFountAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaceFountAttribute* New() const final {
    return CreateMaybeMessage<FaceFountAttribute>(NULL);
  }

  FaceFountAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FaceFountAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FaceFountAttribute& from);
  void MergeFrom(const FaceFountAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FaceFountAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LunaSDKService.Rectangle rect = 1;
  bool has_rect() const;
  void clear_rect();
  static const int kRectFieldNumber = 1;
  private:
  const ::LunaSDKService::Rectangle& _internal_rect() const;
  public:
  const ::LunaSDKService::Rectangle& rect() const;
  ::LunaSDKService::Rectangle* release_rect();
  ::LunaSDKService::Rectangle* mutable_rect();
  void set_allocated_rect(::LunaSDKService::Rectangle* rect);

  // .LunaSDKService.Image WarpIamge = 3;
  bool has_warpiamge() const;
  void clear_warpiamge();
  static const int kWarpIamgeFieldNumber = 3;
  private:
  const ::LunaSDKService::Image& _internal_warpiamge() const;
  public:
  const ::LunaSDKService::Image& warpiamge() const;
  ::LunaSDKService::Image* release_warpiamge();
  ::LunaSDKService::Image* mutable_warpiamge();
  void set_allocated_warpiamge(::LunaSDKService::Image* warpiamge);

  // double score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  double score() const;
  void set_score(double value);

  // @@protoc_insertion_point(class_scope:LunaSDKService.FaceFountAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LunaSDKService::Rectangle* rect_;
  ::LunaSDKService::Image* warpiamge_;
  double score_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_test_5fapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImageProccessingResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LunaSDKService.ImageProccessingResult) */ {
 public:
  ImageProccessingResult();
  virtual ~ImageProccessingResult();

  ImageProccessingResult(const ImageProccessingResult& from);

  inline ImageProccessingResult& operator=(const ImageProccessingResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageProccessingResult(ImageProccessingResult&& from) noexcept
    : ImageProccessingResult() {
    *this = ::std::move(from);
  }

  inline ImageProccessingResult& operator=(ImageProccessingResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageProccessingResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageProccessingResult* internal_default_instance() {
    return reinterpret_cast<const ImageProccessingResult*>(
               &_ImageProccessingResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ImageProccessingResult* other);
  friend void swap(ImageProccessingResult& a, ImageProccessingResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageProccessingResult* New() const final {
    return CreateMaybeMessage<ImageProccessingResult>(NULL);
  }

  ImageProccessingResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImageProccessingResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImageProccessingResult& from);
  void MergeFrom(const ImageProccessingResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageProccessingResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .LunaSDKService.FaceFountAttribute FaceFounts = 1;
  int facefounts_size() const;
  void clear_facefounts();
  static const int kFaceFountsFieldNumber = 1;
  ::LunaSDKService::FaceFountAttribute* mutable_facefounts(int index);
  ::google::protobuf::RepeatedPtrField< ::LunaSDKService::FaceFountAttribute >*
      mutable_facefounts();
  const ::LunaSDKService::FaceFountAttribute& facefounts(int index) const;
  ::LunaSDKService::FaceFountAttribute* add_facefounts();
  const ::google::protobuf::RepeatedPtrField< ::LunaSDKService::FaceFountAttribute >&
      facefounts() const;

  // @@protoc_insertion_point(class_scope:LunaSDKService.ImageProccessingResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::LunaSDKService::FaceFountAttribute > facefounts_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_test_5fapi_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Image

// int32 width = 1;
inline void Image::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 Image::width() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.Image.width)
  return width_;
}
inline void Image::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.Image.width)
}

// int32 height = 2;
inline void Image::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 Image::height() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.Image.height)
  return height_;
}
inline void Image::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.Image.height)
}

// int32 image_date_size = 3;
inline void Image::clear_image_date_size() {
  image_date_size_ = 0;
}
inline ::google::protobuf::int32 Image::image_date_size() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.Image.image_date_size)
  return image_date_size_;
}
inline void Image::set_image_date_size(::google::protobuf::int32 value) {
  
  image_date_size_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.Image.image_date_size)
}

// bytes image_date = 4;
inline void Image::clear_image_date() {
  image_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Image::image_date() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.Image.image_date)
  return image_date_.GetNoArena();
}
inline void Image::set_image_date(const ::std::string& value) {
  
  image_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LunaSDKService.Image.image_date)
}
#if LANG_CXX11
inline void Image::set_image_date(::std::string&& value) {
  
  image_date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LunaSDKService.Image.image_date)
}
#endif
inline void Image::set_image_date(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  image_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LunaSDKService.Image.image_date)
}
inline void Image::set_image_date(const void* value, size_t size) {
  
  image_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LunaSDKService.Image.image_date)
}
inline ::std::string* Image::mutable_image_date() {
  
  // @@protoc_insertion_point(field_mutable:LunaSDKService.Image.image_date)
  return image_date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Image::release_image_date() {
  // @@protoc_insertion_point(field_release:LunaSDKService.Image.image_date)
  
  return image_date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Image::set_allocated_image_date(::std::string* image_date) {
  if (image_date != NULL) {
    
  } else {
    
  }
  image_date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_date);
  // @@protoc_insertion_point(field_set_allocated:LunaSDKService.Image.image_date)
}

// -------------------------------------------------------------------

// ImageProccesing

// int32 ID_Request = 1;
inline void ImageProccesing::clear_id_request() {
  id_request_ = 0;
}
inline ::google::protobuf::int32 ImageProccesing::id_request() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.ImageProccesing.ID_Request)
  return id_request_;
}
inline void ImageProccesing::set_id_request(::google::protobuf::int32 value) {
  
  id_request_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.ImageProccesing.ID_Request)
}

// .LunaSDKService.Image Photo = 2;
inline bool ImageProccesing::has_photo() const {
  return this != internal_default_instance() && photo_ != NULL;
}
inline void ImageProccesing::clear_photo() {
  if (GetArenaNoVirtual() == NULL && photo_ != NULL) {
    delete photo_;
  }
  photo_ = NULL;
}
inline const ::LunaSDKService::Image& ImageProccesing::_internal_photo() const {
  return *photo_;
}
inline const ::LunaSDKService::Image& ImageProccesing::photo() const {
  const ::LunaSDKService::Image* p = photo_;
  // @@protoc_insertion_point(field_get:LunaSDKService.ImageProccesing.Photo)
  return p != NULL ? *p : *reinterpret_cast<const ::LunaSDKService::Image*>(
      &::LunaSDKService::_Image_default_instance_);
}
inline ::LunaSDKService::Image* ImageProccesing::release_photo() {
  // @@protoc_insertion_point(field_release:LunaSDKService.ImageProccesing.Photo)
  
  ::LunaSDKService::Image* temp = photo_;
  photo_ = NULL;
  return temp;
}
inline ::LunaSDKService::Image* ImageProccesing::mutable_photo() {
  
  if (photo_ == NULL) {
    auto* p = CreateMaybeMessage<::LunaSDKService::Image>(GetArenaNoVirtual());
    photo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:LunaSDKService.ImageProccesing.Photo)
  return photo_;
}
inline void ImageProccesing::set_allocated_photo(::LunaSDKService::Image* photo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete photo_;
  }
  if (photo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      photo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, photo, submessage_arena);
    }
    
  } else {
    
  }
  photo_ = photo;
  // @@protoc_insertion_point(field_set_allocated:LunaSDKService.ImageProccesing.Photo)
}

// -------------------------------------------------------------------

// QualityFaceFountAttribute

// double dark = 1;
inline void QualityFaceFountAttribute::clear_dark() {
  dark_ = 0;
}
inline double QualityFaceFountAttribute::dark() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.QualityFaceFountAttribute.dark)
  return dark_;
}
inline void QualityFaceFountAttribute::set_dark(double value) {
  
  dark_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.QualityFaceFountAttribute.dark)
}

// double ligth = 2;
inline void QualityFaceFountAttribute::clear_ligth() {
  ligth_ = 0;
}
inline double QualityFaceFountAttribute::ligth() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.QualityFaceFountAttribute.ligth)
  return ligth_;
}
inline void QualityFaceFountAttribute::set_ligth(double value) {
  
  ligth_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.QualityFaceFountAttribute.ligth)
}

// double gray = 3;
inline void QualityFaceFountAttribute::clear_gray() {
  gray_ = 0;
}
inline double QualityFaceFountAttribute::gray() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.QualityFaceFountAttribute.gray)
  return gray_;
}
inline void QualityFaceFountAttribute::set_gray(double value) {
  
  gray_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.QualityFaceFountAttribute.gray)
}

// double blur = 4;
inline void QualityFaceFountAttribute::clear_blur() {
  blur_ = 0;
}
inline double QualityFaceFountAttribute::blur() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.QualityFaceFountAttribute.blur)
  return blur_;
}
inline void QualityFaceFountAttribute::set_blur(double value) {
  
  blur_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.QualityFaceFountAttribute.blur)
}

// double quality = 5;
inline void QualityFaceFountAttribute::clear_quality() {
  quality_ = 0;
}
inline double QualityFaceFountAttribute::quality() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.QualityFaceFountAttribute.quality)
  return quality_;
}
inline void QualityFaceFountAttribute::set_quality(double value) {
  
  quality_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.QualityFaceFountAttribute.quality)
}

// double threshold = 6;
inline void QualityFaceFountAttribute::clear_threshold() {
  threshold_ = 0;
}
inline double QualityFaceFountAttribute::threshold() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.QualityFaceFountAttribute.threshold)
  return threshold_;
}
inline void QualityFaceFountAttribute::set_threshold(double value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.QualityFaceFountAttribute.threshold)
}

// -------------------------------------------------------------------

// HeadPoseFaceFountAttribute

// float pitch = 1;
inline void HeadPoseFaceFountAttribute::clear_pitch() {
  pitch_ = 0;
}
inline float HeadPoseFaceFountAttribute::pitch() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.HeadPoseFaceFountAttribute.pitch)
  return pitch_;
}
inline void HeadPoseFaceFountAttribute::set_pitch(float value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.HeadPoseFaceFountAttribute.pitch)
}

// float yam = 2;
inline void HeadPoseFaceFountAttribute::clear_yam() {
  yam_ = 0;
}
inline float HeadPoseFaceFountAttribute::yam() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.HeadPoseFaceFountAttribute.yam)
  return yam_;
}
inline void HeadPoseFaceFountAttribute::set_yam(float value) {
  
  yam_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.HeadPoseFaceFountAttribute.yam)
}

// float rool = 3;
inline void HeadPoseFaceFountAttribute::clear_rool() {
  rool_ = 0;
}
inline float HeadPoseFaceFountAttribute::rool() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.HeadPoseFaceFountAttribute.rool)
  return rool_;
}
inline void HeadPoseFaceFountAttribute::set_rool(float value) {
  
  rool_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.HeadPoseFaceFountAttribute.rool)
}

// -------------------------------------------------------------------

// Rectangle

// int32 x = 1;
inline void Rectangle::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 Rectangle::x() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.Rectangle.x)
  return x_;
}
inline void Rectangle::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.Rectangle.x)
}

// int32 y = 2;
inline void Rectangle::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 Rectangle::y() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.Rectangle.y)
  return y_;
}
inline void Rectangle::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.Rectangle.y)
}

// int32 width = 3;
inline void Rectangle::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 Rectangle::width() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.Rectangle.width)
  return width_;
}
inline void Rectangle::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.Rectangle.width)
}

// int32 height = 4;
inline void Rectangle::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 Rectangle::height() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.Rectangle.height)
  return height_;
}
inline void Rectangle::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.Rectangle.height)
}

// -------------------------------------------------------------------

// FaceFountAttribute

// .LunaSDKService.Rectangle rect = 1;
inline bool FaceFountAttribute::has_rect() const {
  return this != internal_default_instance() && rect_ != NULL;
}
inline void FaceFountAttribute::clear_rect() {
  if (GetArenaNoVirtual() == NULL && rect_ != NULL) {
    delete rect_;
  }
  rect_ = NULL;
}
inline const ::LunaSDKService::Rectangle& FaceFountAttribute::_internal_rect() const {
  return *rect_;
}
inline const ::LunaSDKService::Rectangle& FaceFountAttribute::rect() const {
  const ::LunaSDKService::Rectangle* p = rect_;
  // @@protoc_insertion_point(field_get:LunaSDKService.FaceFountAttribute.rect)
  return p != NULL ? *p : *reinterpret_cast<const ::LunaSDKService::Rectangle*>(
      &::LunaSDKService::_Rectangle_default_instance_);
}
inline ::LunaSDKService::Rectangle* FaceFountAttribute::release_rect() {
  // @@protoc_insertion_point(field_release:LunaSDKService.FaceFountAttribute.rect)
  
  ::LunaSDKService::Rectangle* temp = rect_;
  rect_ = NULL;
  return temp;
}
inline ::LunaSDKService::Rectangle* FaceFountAttribute::mutable_rect() {
  
  if (rect_ == NULL) {
    auto* p = CreateMaybeMessage<::LunaSDKService::Rectangle>(GetArenaNoVirtual());
    rect_ = p;
  }
  // @@protoc_insertion_point(field_mutable:LunaSDKService.FaceFountAttribute.rect)
  return rect_;
}
inline void FaceFountAttribute::set_allocated_rect(::LunaSDKService::Rectangle* rect) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rect_;
  }
  if (rect) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rect = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rect, submessage_arena);
    }
    
  } else {
    
  }
  rect_ = rect;
  // @@protoc_insertion_point(field_set_allocated:LunaSDKService.FaceFountAttribute.rect)
}

// double score = 2;
inline void FaceFountAttribute::clear_score() {
  score_ = 0;
}
inline double FaceFountAttribute::score() const {
  // @@protoc_insertion_point(field_get:LunaSDKService.FaceFountAttribute.score)
  return score_;
}
inline void FaceFountAttribute::set_score(double value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:LunaSDKService.FaceFountAttribute.score)
}

// .LunaSDKService.Image WarpIamge = 3;
inline bool FaceFountAttribute::has_warpiamge() const {
  return this != internal_default_instance() && warpiamge_ != NULL;
}
inline void FaceFountAttribute::clear_warpiamge() {
  if (GetArenaNoVirtual() == NULL && warpiamge_ != NULL) {
    delete warpiamge_;
  }
  warpiamge_ = NULL;
}
inline const ::LunaSDKService::Image& FaceFountAttribute::_internal_warpiamge() const {
  return *warpiamge_;
}
inline const ::LunaSDKService::Image& FaceFountAttribute::warpiamge() const {
  const ::LunaSDKService::Image* p = warpiamge_;
  // @@protoc_insertion_point(field_get:LunaSDKService.FaceFountAttribute.WarpIamge)
  return p != NULL ? *p : *reinterpret_cast<const ::LunaSDKService::Image*>(
      &::LunaSDKService::_Image_default_instance_);
}
inline ::LunaSDKService::Image* FaceFountAttribute::release_warpiamge() {
  // @@protoc_insertion_point(field_release:LunaSDKService.FaceFountAttribute.WarpIamge)
  
  ::LunaSDKService::Image* temp = warpiamge_;
  warpiamge_ = NULL;
  return temp;
}
inline ::LunaSDKService::Image* FaceFountAttribute::mutable_warpiamge() {
  
  if (warpiamge_ == NULL) {
    auto* p = CreateMaybeMessage<::LunaSDKService::Image>(GetArenaNoVirtual());
    warpiamge_ = p;
  }
  // @@protoc_insertion_point(field_mutable:LunaSDKService.FaceFountAttribute.WarpIamge)
  return warpiamge_;
}
inline void FaceFountAttribute::set_allocated_warpiamge(::LunaSDKService::Image* warpiamge) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete warpiamge_;
  }
  if (warpiamge) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      warpiamge = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, warpiamge, submessage_arena);
    }
    
  } else {
    
  }
  warpiamge_ = warpiamge;
  // @@protoc_insertion_point(field_set_allocated:LunaSDKService.FaceFountAttribute.WarpIamge)
}

// -------------------------------------------------------------------

// ImageProccessingResult

// repeated .LunaSDKService.FaceFountAttribute FaceFounts = 1;
inline int ImageProccessingResult::facefounts_size() const {
  return facefounts_.size();
}
inline void ImageProccessingResult::clear_facefounts() {
  facefounts_.Clear();
}
inline ::LunaSDKService::FaceFountAttribute* ImageProccessingResult::mutable_facefounts(int index) {
  // @@protoc_insertion_point(field_mutable:LunaSDKService.ImageProccessingResult.FaceFounts)
  return facefounts_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::LunaSDKService::FaceFountAttribute >*
ImageProccessingResult::mutable_facefounts() {
  // @@protoc_insertion_point(field_mutable_list:LunaSDKService.ImageProccessingResult.FaceFounts)
  return &facefounts_;
}
inline const ::LunaSDKService::FaceFountAttribute& ImageProccessingResult::facefounts(int index) const {
  // @@protoc_insertion_point(field_get:LunaSDKService.ImageProccessingResult.FaceFounts)
  return facefounts_.Get(index);
}
inline ::LunaSDKService::FaceFountAttribute* ImageProccessingResult::add_facefounts() {
  // @@protoc_insertion_point(field_add:LunaSDKService.ImageProccessingResult.FaceFounts)
  return facefounts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LunaSDKService::FaceFountAttribute >&
ImageProccessingResult::facefounts() const {
  // @@protoc_insertion_point(field_list:LunaSDKService.ImageProccessingResult.FaceFounts)
  return facefounts_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace LunaSDKService

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_test_5fapi_2eproto
