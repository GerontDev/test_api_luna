// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_api.proto

#include "test_api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_test_5fapi_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_5fapi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Image;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_5fapi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Rectangle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_5fapi_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_FaceFountAttribute;
}  // namespace protobuf_test_5fapi_2eproto
namespace LunaSDKService {
class ImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Image>
      _instance;
} _Image_default_instance_;
class ImageProccesingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageProccesing>
      _instance;
} _ImageProccesing_default_instance_;
class QualityFaceFountAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QualityFaceFountAttribute>
      _instance;
} _QualityFaceFountAttribute_default_instance_;
class HeadPoseFaceFountAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeadPoseFaceFountAttribute>
      _instance;
} _HeadPoseFaceFountAttribute_default_instance_;
class RectangleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rectangle>
      _instance;
} _Rectangle_default_instance_;
class FaceFountAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaceFountAttribute>
      _instance;
} _FaceFountAttribute_default_instance_;
class ImageProccessingResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageProccessingResult>
      _instance;
} _ImageProccessingResult_default_instance_;
}  // namespace LunaSDKService
namespace protobuf_test_5fapi_2eproto {
static void InitDefaultsImage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LunaSDKService::_Image_default_instance_;
    new (ptr) ::LunaSDKService::Image();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LunaSDKService::Image::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Image =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImage}, {}};

static void InitDefaultsImageProccesing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LunaSDKService::_ImageProccesing_default_instance_;
    new (ptr) ::LunaSDKService::ImageProccesing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LunaSDKService::ImageProccesing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImageProccesing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImageProccesing}, {
      &protobuf_test_5fapi_2eproto::scc_info_Image.base,}};

static void InitDefaultsQualityFaceFountAttribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LunaSDKService::_QualityFaceFountAttribute_default_instance_;
    new (ptr) ::LunaSDKService::QualityFaceFountAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LunaSDKService::QualityFaceFountAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QualityFaceFountAttribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQualityFaceFountAttribute}, {}};

static void InitDefaultsHeadPoseFaceFountAttribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LunaSDKService::_HeadPoseFaceFountAttribute_default_instance_;
    new (ptr) ::LunaSDKService::HeadPoseFaceFountAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LunaSDKService::HeadPoseFaceFountAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeadPoseFaceFountAttribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeadPoseFaceFountAttribute}, {}};

static void InitDefaultsRectangle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LunaSDKService::_Rectangle_default_instance_;
    new (ptr) ::LunaSDKService::Rectangle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LunaSDKService::Rectangle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rectangle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRectangle}, {}};

static void InitDefaultsFaceFountAttribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LunaSDKService::_FaceFountAttribute_default_instance_;
    new (ptr) ::LunaSDKService::FaceFountAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LunaSDKService::FaceFountAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_FaceFountAttribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFaceFountAttribute}, {
      &protobuf_test_5fapi_2eproto::scc_info_Rectangle.base,
      &protobuf_test_5fapi_2eproto::scc_info_Image.base,}};

static void InitDefaultsImageProccessingResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LunaSDKService::_ImageProccessingResult_default_instance_;
    new (ptr) ::LunaSDKService::ImageProccessingResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LunaSDKService::ImageProccessingResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImageProccessingResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImageProccessingResult}, {
      &protobuf_test_5fapi_2eproto::scc_info_FaceFountAttribute.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Image.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageProccesing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QualityFaceFountAttribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeadPoseFaceFountAttribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rectangle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FaceFountAttribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageProccessingResult.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::Image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::Image, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::Image, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::Image, image_date_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::Image, image_date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::ImageProccesing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::ImageProccesing, id_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::ImageProccesing, photo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::QualityFaceFountAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::QualityFaceFountAttribute, dark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::QualityFaceFountAttribute, ligth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::QualityFaceFountAttribute, gray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::QualityFaceFountAttribute, blur_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::QualityFaceFountAttribute, quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::QualityFaceFountAttribute, threshold_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::HeadPoseFaceFountAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::HeadPoseFaceFountAttribute, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::HeadPoseFaceFountAttribute, yam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::HeadPoseFaceFountAttribute, rool_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::Rectangle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::Rectangle, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::Rectangle, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::Rectangle, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::Rectangle, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::FaceFountAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::FaceFountAttribute, rect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::FaceFountAttribute, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::FaceFountAttribute, warpiamge_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::ImageProccessingResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LunaSDKService::ImageProccessingResult, facefounts_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::LunaSDKService::Image)},
  { 9, -1, sizeof(::LunaSDKService::ImageProccesing)},
  { 16, -1, sizeof(::LunaSDKService::QualityFaceFountAttribute)},
  { 27, -1, sizeof(::LunaSDKService::HeadPoseFaceFountAttribute)},
  { 35, -1, sizeof(::LunaSDKService::Rectangle)},
  { 44, -1, sizeof(::LunaSDKService::FaceFountAttribute)},
  { 52, -1, sizeof(::LunaSDKService::ImageProccessingResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::LunaSDKService::_Image_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LunaSDKService::_ImageProccesing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LunaSDKService::_QualityFaceFountAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LunaSDKService::_HeadPoseFaceFountAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LunaSDKService::_Rectangle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LunaSDKService::_FaceFountAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LunaSDKService::_ImageProccessingResult_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "test_api.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016test_api.proto\022\016LunaSDKService\"S\n\005Imag"
      "e\022\r\n\005width\030\001 \001(\005\022\016\n\006height\030\002 \001(\005\022\027\n\017imag"
      "e_date_size\030\003 \001(\005\022\022\n\nimage_date\030\004 \001(\014\"K\n"
      "\017ImageProccesing\022\022\n\nID_Request\030\001 \001(\005\022$\n\005"
      "Photo\030\002 \001(\0132\025.LunaSDKService.Image\"x\n\031Qu"
      "alityFaceFountAttribute\022\014\n\004dark\030\001 \001(\001\022\r\n"
      "\005ligth\030\002 \001(\001\022\014\n\004gray\030\003 \001(\001\022\014\n\004blur\030\004 \001(\001"
      "\022\017\n\007quality\030\005 \001(\001\022\021\n\tthreshold\030\006 \001(\001\"F\n\032"
      "HeadPoseFaceFountAttribute\022\r\n\005pitch\030\001 \001("
      "\002\022\013\n\003yam\030\002 \001(\002\022\014\n\004rool\030\003 \001(\002\"@\n\tRectangl"
      "e\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\r\n\005width\030\003 \001(\005\022\016"
      "\n\006height\030\004 \001(\005\"v\n\022FaceFountAttribute\022\'\n\004"
      "rect\030\001 \001(\0132\031.LunaSDKService.Rectangle\022\r\n"
      "\005score\030\002 \001(\001\022(\n\tWarpIamge\030\003 \001(\0132\025.LunaSD"
      "KService.Image\"P\n\026ImageProccessingResult"
      "\0226\n\nFaceFounts\030\001 \003(\0132\".LunaSDKService.Fa"
      "ceFountAttribute2^\n\rLunaSDKServer\022M\n\nPro"
      "ccesing\022\025.LunaSDKService.Image\032&.LunaSDK"
      "Service.ImageProccessingResult\"\000BD\n\022com."
      "LunaSDKServiceB\rImgProcResult\252\002\036Google.P"
      "rotobuf.LunaSDKServiceb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 830);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test_api.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_test_5fapi_2eproto
namespace LunaSDKService {

// ===================================================================

void Image::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Image::kWidthFieldNumber;
const int Image::kHeightFieldNumber;
const int Image::kImageDateSizeFieldNumber;
const int Image::kImageDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Image::Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_5fapi_2eproto::scc_info_Image.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LunaSDKService.Image)
}
Image::Image(const Image& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_date().size() > 0) {
    image_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_date_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&image_date_size_) -
    reinterpret_cast<char*>(&width_)) + sizeof(image_date_size_));
  // @@protoc_insertion_point(copy_constructor:LunaSDKService.Image)
}

void Image::SharedCtor() {
  image_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_date_size_) -
      reinterpret_cast<char*>(&width_)) + sizeof(image_date_size_));
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:LunaSDKService.Image)
  SharedDtor();
}

void Image::SharedDtor() {
  image_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Image::descriptor() {
  ::protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Image& Image::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_5fapi_2eproto::scc_info_Image.base);
  return *internal_default_instance();
}


void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:LunaSDKService.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_date_size_) -
      reinterpret_cast<char*>(&width_)) + sizeof(image_date_size_));
  _internal_metadata_.Clear();
}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LunaSDKService.Image)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 image_date_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_date_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes image_date = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LunaSDKService.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LunaSDKService.Image)
  return false;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LunaSDKService.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 width = 1;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->width(), output);
  }

  // int32 height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->height(), output);
  }

  // int32 image_date_size = 3;
  if (this->image_date_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->image_date_size(), output);
  }

  // bytes image_date = 4;
  if (this->image_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->image_date(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LunaSDKService.Image)
}

::google::protobuf::uint8* Image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LunaSDKService.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 width = 1;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->width(), target);
  }

  // int32 height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->height(), target);
  }

  // int32 image_date_size = 3;
  if (this->image_date_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->image_date_size(), target);
  }

  // bytes image_date = 4;
  if (this->image_date().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->image_date(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LunaSDKService.Image)
  return target;
}

size_t Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LunaSDKService.Image)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes image_date = 4;
  if (this->image_date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->image_date());
  }

  // int32 width = 1;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  // int32 image_date_size = 3;
  if (this->image_date_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->image_date_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LunaSDKService.Image)
  GOOGLE_DCHECK_NE(&from, this);
  const Image* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LunaSDKService.Image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LunaSDKService.Image)
    MergeFrom(*source);
  }
}

void Image::MergeFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LunaSDKService.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_date().size() > 0) {

    image_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_date_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.image_date_size() != 0) {
    set_image_date_size(from.image_date_size());
  }
}

void Image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LunaSDKService.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LunaSDKService.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {
  return true;
}

void Image::Swap(Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Image::InternalSwap(Image* other) {
  using std::swap;
  image_date_.Swap(&other->image_date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(image_date_size_, other->image_date_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Image::GetMetadata() const {
  protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageProccesing::InitAsDefaultInstance() {
  ::LunaSDKService::_ImageProccesing_default_instance_._instance.get_mutable()->photo_ = const_cast< ::LunaSDKService::Image*>(
      ::LunaSDKService::Image::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageProccesing::kIDRequestFieldNumber;
const int ImageProccesing::kPhotoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageProccesing::ImageProccesing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_5fapi_2eproto::scc_info_ImageProccesing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LunaSDKService.ImageProccesing)
}
ImageProccesing::ImageProccesing(const ImageProccesing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_photo()) {
    photo_ = new ::LunaSDKService::Image(*from.photo_);
  } else {
    photo_ = NULL;
  }
  id_request_ = from.id_request_;
  // @@protoc_insertion_point(copy_constructor:LunaSDKService.ImageProccesing)
}

void ImageProccesing::SharedCtor() {
  ::memset(&photo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_request_) -
      reinterpret_cast<char*>(&photo_)) + sizeof(id_request_));
}

ImageProccesing::~ImageProccesing() {
  // @@protoc_insertion_point(destructor:LunaSDKService.ImageProccesing)
  SharedDtor();
}

void ImageProccesing::SharedDtor() {
  if (this != internal_default_instance()) delete photo_;
}

void ImageProccesing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageProccesing::descriptor() {
  ::protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageProccesing& ImageProccesing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_5fapi_2eproto::scc_info_ImageProccesing.base);
  return *internal_default_instance();
}


void ImageProccesing::Clear() {
// @@protoc_insertion_point(message_clear_start:LunaSDKService.ImageProccesing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && photo_ != NULL) {
    delete photo_;
  }
  photo_ = NULL;
  id_request_ = 0;
  _internal_metadata_.Clear();
}

bool ImageProccesing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LunaSDKService.ImageProccesing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ID_Request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_request_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LunaSDKService.Image Photo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_photo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LunaSDKService.ImageProccesing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LunaSDKService.ImageProccesing)
  return false;
#undef DO_
}

void ImageProccesing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LunaSDKService.ImageProccesing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID_Request = 1;
  if (this->id_request() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id_request(), output);
  }

  // .LunaSDKService.Image Photo = 2;
  if (this->has_photo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_photo(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LunaSDKService.ImageProccesing)
}

::google::protobuf::uint8* ImageProccesing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LunaSDKService.ImageProccesing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID_Request = 1;
  if (this->id_request() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id_request(), target);
  }

  // .LunaSDKService.Image Photo = 2;
  if (this->has_photo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_photo(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LunaSDKService.ImageProccesing)
  return target;
}

size_t ImageProccesing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LunaSDKService.ImageProccesing)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LunaSDKService.Image Photo = 2;
  if (this->has_photo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *photo_);
  }

  // int32 ID_Request = 1;
  if (this->id_request() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id_request());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageProccesing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LunaSDKService.ImageProccesing)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageProccesing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageProccesing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LunaSDKService.ImageProccesing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LunaSDKService.ImageProccesing)
    MergeFrom(*source);
  }
}

void ImageProccesing::MergeFrom(const ImageProccesing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LunaSDKService.ImageProccesing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_photo()) {
    mutable_photo()->::LunaSDKService::Image::MergeFrom(from.photo());
  }
  if (from.id_request() != 0) {
    set_id_request(from.id_request());
  }
}

void ImageProccesing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LunaSDKService.ImageProccesing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageProccesing::CopyFrom(const ImageProccesing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LunaSDKService.ImageProccesing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageProccesing::IsInitialized() const {
  return true;
}

void ImageProccesing::Swap(ImageProccesing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageProccesing::InternalSwap(ImageProccesing* other) {
  using std::swap;
  swap(photo_, other->photo_);
  swap(id_request_, other->id_request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageProccesing::GetMetadata() const {
  protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QualityFaceFountAttribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QualityFaceFountAttribute::kDarkFieldNumber;
const int QualityFaceFountAttribute::kLigthFieldNumber;
const int QualityFaceFountAttribute::kGrayFieldNumber;
const int QualityFaceFountAttribute::kBlurFieldNumber;
const int QualityFaceFountAttribute::kQualityFieldNumber;
const int QualityFaceFountAttribute::kThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QualityFaceFountAttribute::QualityFaceFountAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_5fapi_2eproto::scc_info_QualityFaceFountAttribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LunaSDKService.QualityFaceFountAttribute)
}
QualityFaceFountAttribute::QualityFaceFountAttribute(const QualityFaceFountAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dark_, &from.dark_,
    static_cast<size_t>(reinterpret_cast<char*>(&threshold_) -
    reinterpret_cast<char*>(&dark_)) + sizeof(threshold_));
  // @@protoc_insertion_point(copy_constructor:LunaSDKService.QualityFaceFountAttribute)
}

void QualityFaceFountAttribute::SharedCtor() {
  ::memset(&dark_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&threshold_) -
      reinterpret_cast<char*>(&dark_)) + sizeof(threshold_));
}

QualityFaceFountAttribute::~QualityFaceFountAttribute() {
  // @@protoc_insertion_point(destructor:LunaSDKService.QualityFaceFountAttribute)
  SharedDtor();
}

void QualityFaceFountAttribute::SharedDtor() {
}

void QualityFaceFountAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QualityFaceFountAttribute::descriptor() {
  ::protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QualityFaceFountAttribute& QualityFaceFountAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_5fapi_2eproto::scc_info_QualityFaceFountAttribute.base);
  return *internal_default_instance();
}


void QualityFaceFountAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:LunaSDKService.QualityFaceFountAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dark_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&threshold_) -
      reinterpret_cast<char*>(&dark_)) + sizeof(threshold_));
  _internal_metadata_.Clear();
}

bool QualityFaceFountAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LunaSDKService.QualityFaceFountAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double dark = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ligth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ligth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double gray = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gray_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double blur = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &blur_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double quality = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double threshold = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LunaSDKService.QualityFaceFountAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LunaSDKService.QualityFaceFountAttribute)
  return false;
#undef DO_
}

void QualityFaceFountAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LunaSDKService.QualityFaceFountAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double dark = 1;
  if (this->dark() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->dark(), output);
  }

  // double ligth = 2;
  if (this->ligth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ligth(), output);
  }

  // double gray = 3;
  if (this->gray() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->gray(), output);
  }

  // double blur = 4;
  if (this->blur() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->blur(), output);
  }

  // double quality = 5;
  if (this->quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->quality(), output);
  }

  // double threshold = 6;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->threshold(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LunaSDKService.QualityFaceFountAttribute)
}

::google::protobuf::uint8* QualityFaceFountAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LunaSDKService.QualityFaceFountAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double dark = 1;
  if (this->dark() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->dark(), target);
  }

  // double ligth = 2;
  if (this->ligth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ligth(), target);
  }

  // double gray = 3;
  if (this->gray() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->gray(), target);
  }

  // double blur = 4;
  if (this->blur() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->blur(), target);
  }

  // double quality = 5;
  if (this->quality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->quality(), target);
  }

  // double threshold = 6;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->threshold(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LunaSDKService.QualityFaceFountAttribute)
  return target;
}

size_t QualityFaceFountAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LunaSDKService.QualityFaceFountAttribute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double dark = 1;
  if (this->dark() != 0) {
    total_size += 1 + 8;
  }

  // double ligth = 2;
  if (this->ligth() != 0) {
    total_size += 1 + 8;
  }

  // double gray = 3;
  if (this->gray() != 0) {
    total_size += 1 + 8;
  }

  // double blur = 4;
  if (this->blur() != 0) {
    total_size += 1 + 8;
  }

  // double quality = 5;
  if (this->quality() != 0) {
    total_size += 1 + 8;
  }

  // double threshold = 6;
  if (this->threshold() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QualityFaceFountAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LunaSDKService.QualityFaceFountAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const QualityFaceFountAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QualityFaceFountAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LunaSDKService.QualityFaceFountAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LunaSDKService.QualityFaceFountAttribute)
    MergeFrom(*source);
  }
}

void QualityFaceFountAttribute::MergeFrom(const QualityFaceFountAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LunaSDKService.QualityFaceFountAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dark() != 0) {
    set_dark(from.dark());
  }
  if (from.ligth() != 0) {
    set_ligth(from.ligth());
  }
  if (from.gray() != 0) {
    set_gray(from.gray());
  }
  if (from.blur() != 0) {
    set_blur(from.blur());
  }
  if (from.quality() != 0) {
    set_quality(from.quality());
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
}

void QualityFaceFountAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LunaSDKService.QualityFaceFountAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QualityFaceFountAttribute::CopyFrom(const QualityFaceFountAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LunaSDKService.QualityFaceFountAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityFaceFountAttribute::IsInitialized() const {
  return true;
}

void QualityFaceFountAttribute::Swap(QualityFaceFountAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityFaceFountAttribute::InternalSwap(QualityFaceFountAttribute* other) {
  using std::swap;
  swap(dark_, other->dark_);
  swap(ligth_, other->ligth_);
  swap(gray_, other->gray_);
  swap(blur_, other->blur_);
  swap(quality_, other->quality_);
  swap(threshold_, other->threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QualityFaceFountAttribute::GetMetadata() const {
  protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeadPoseFaceFountAttribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeadPoseFaceFountAttribute::kPitchFieldNumber;
const int HeadPoseFaceFountAttribute::kYamFieldNumber;
const int HeadPoseFaceFountAttribute::kRoolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeadPoseFaceFountAttribute::HeadPoseFaceFountAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_5fapi_2eproto::scc_info_HeadPoseFaceFountAttribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LunaSDKService.HeadPoseFaceFountAttribute)
}
HeadPoseFaceFountAttribute::HeadPoseFaceFountAttribute(const HeadPoseFaceFountAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pitch_, &from.pitch_,
    static_cast<size_t>(reinterpret_cast<char*>(&rool_) -
    reinterpret_cast<char*>(&pitch_)) + sizeof(rool_));
  // @@protoc_insertion_point(copy_constructor:LunaSDKService.HeadPoseFaceFountAttribute)
}

void HeadPoseFaceFountAttribute::SharedCtor() {
  ::memset(&pitch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rool_) -
      reinterpret_cast<char*>(&pitch_)) + sizeof(rool_));
}

HeadPoseFaceFountAttribute::~HeadPoseFaceFountAttribute() {
  // @@protoc_insertion_point(destructor:LunaSDKService.HeadPoseFaceFountAttribute)
  SharedDtor();
}

void HeadPoseFaceFountAttribute::SharedDtor() {
}

void HeadPoseFaceFountAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeadPoseFaceFountAttribute::descriptor() {
  ::protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeadPoseFaceFountAttribute& HeadPoseFaceFountAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_5fapi_2eproto::scc_info_HeadPoseFaceFountAttribute.base);
  return *internal_default_instance();
}


void HeadPoseFaceFountAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:LunaSDKService.HeadPoseFaceFountAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pitch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rool_) -
      reinterpret_cast<char*>(&pitch_)) + sizeof(rool_));
  _internal_metadata_.Clear();
}

bool HeadPoseFaceFountAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LunaSDKService.HeadPoseFaceFountAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float pitch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yam = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rool = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rool_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LunaSDKService.HeadPoseFaceFountAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LunaSDKService.HeadPoseFaceFountAttribute)
  return false;
#undef DO_
}

void HeadPoseFaceFountAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LunaSDKService.HeadPoseFaceFountAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pitch = 1;
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->pitch(), output);
  }

  // float yam = 2;
  if (this->yam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->yam(), output);
  }

  // float rool = 3;
  if (this->rool() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->rool(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LunaSDKService.HeadPoseFaceFountAttribute)
}

::google::protobuf::uint8* HeadPoseFaceFountAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LunaSDKService.HeadPoseFaceFountAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pitch = 1;
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->pitch(), target);
  }

  // float yam = 2;
  if (this->yam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->yam(), target);
  }

  // float rool = 3;
  if (this->rool() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->rool(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LunaSDKService.HeadPoseFaceFountAttribute)
  return target;
}

size_t HeadPoseFaceFountAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LunaSDKService.HeadPoseFaceFountAttribute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float pitch = 1;
  if (this->pitch() != 0) {
    total_size += 1 + 4;
  }

  // float yam = 2;
  if (this->yam() != 0) {
    total_size += 1 + 4;
  }

  // float rool = 3;
  if (this->rool() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeadPoseFaceFountAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LunaSDKService.HeadPoseFaceFountAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const HeadPoseFaceFountAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeadPoseFaceFountAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LunaSDKService.HeadPoseFaceFountAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LunaSDKService.HeadPoseFaceFountAttribute)
    MergeFrom(*source);
  }
}

void HeadPoseFaceFountAttribute::MergeFrom(const HeadPoseFaceFountAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LunaSDKService.HeadPoseFaceFountAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.yam() != 0) {
    set_yam(from.yam());
  }
  if (from.rool() != 0) {
    set_rool(from.rool());
  }
}

void HeadPoseFaceFountAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LunaSDKService.HeadPoseFaceFountAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeadPoseFaceFountAttribute::CopyFrom(const HeadPoseFaceFountAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LunaSDKService.HeadPoseFaceFountAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeadPoseFaceFountAttribute::IsInitialized() const {
  return true;
}

void HeadPoseFaceFountAttribute::Swap(HeadPoseFaceFountAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeadPoseFaceFountAttribute::InternalSwap(HeadPoseFaceFountAttribute* other) {
  using std::swap;
  swap(pitch_, other->pitch_);
  swap(yam_, other->yam_);
  swap(rool_, other->rool_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeadPoseFaceFountAttribute::GetMetadata() const {
  protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Rectangle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rectangle::kXFieldNumber;
const int Rectangle::kYFieldNumber;
const int Rectangle::kWidthFieldNumber;
const int Rectangle::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rectangle::Rectangle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_5fapi_2eproto::scc_info_Rectangle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LunaSDKService.Rectangle)
}
Rectangle::Rectangle(const Rectangle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&x_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:LunaSDKService.Rectangle)
}

void Rectangle::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&x_)) + sizeof(height_));
}

Rectangle::~Rectangle() {
  // @@protoc_insertion_point(destructor:LunaSDKService.Rectangle)
  SharedDtor();
}

void Rectangle::SharedDtor() {
}

void Rectangle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Rectangle::descriptor() {
  ::protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Rectangle& Rectangle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_5fapi_2eproto::scc_info_Rectangle.base);
  return *internal_default_instance();
}


void Rectangle::Clear() {
// @@protoc_insertion_point(message_clear_start:LunaSDKService.Rectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&x_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool Rectangle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LunaSDKService.Rectangle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LunaSDKService.Rectangle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LunaSDKService.Rectangle)
  return false;
#undef DO_
}

void Rectangle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LunaSDKService.Rectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // int32 width = 3;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->width(), output);
  }

  // int32 height = 4;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LunaSDKService.Rectangle)
}

::google::protobuf::uint8* Rectangle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LunaSDKService.Rectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // int32 width = 3;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->width(), target);
  }

  // int32 height = 4;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LunaSDKService.Rectangle)
  return target;
}

size_t Rectangle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LunaSDKService.Rectangle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  // int32 width = 3;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rectangle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LunaSDKService.Rectangle)
  GOOGLE_DCHECK_NE(&from, this);
  const Rectangle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Rectangle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LunaSDKService.Rectangle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LunaSDKService.Rectangle)
    MergeFrom(*source);
  }
}

void Rectangle::MergeFrom(const Rectangle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LunaSDKService.Rectangle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void Rectangle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LunaSDKService.Rectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rectangle::CopyFrom(const Rectangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LunaSDKService.Rectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rectangle::IsInitialized() const {
  return true;
}

void Rectangle::Swap(Rectangle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rectangle::InternalSwap(Rectangle* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Rectangle::GetMetadata() const {
  protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FaceFountAttribute::InitAsDefaultInstance() {
  ::LunaSDKService::_FaceFountAttribute_default_instance_._instance.get_mutable()->rect_ = const_cast< ::LunaSDKService::Rectangle*>(
      ::LunaSDKService::Rectangle::internal_default_instance());
  ::LunaSDKService::_FaceFountAttribute_default_instance_._instance.get_mutable()->warpiamge_ = const_cast< ::LunaSDKService::Image*>(
      ::LunaSDKService::Image::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceFountAttribute::kRectFieldNumber;
const int FaceFountAttribute::kScoreFieldNumber;
const int FaceFountAttribute::kWarpIamgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceFountAttribute::FaceFountAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_5fapi_2eproto::scc_info_FaceFountAttribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LunaSDKService.FaceFountAttribute)
}
FaceFountAttribute::FaceFountAttribute(const FaceFountAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rect()) {
    rect_ = new ::LunaSDKService::Rectangle(*from.rect_);
  } else {
    rect_ = NULL;
  }
  if (from.has_warpiamge()) {
    warpiamge_ = new ::LunaSDKService::Image(*from.warpiamge_);
  } else {
    warpiamge_ = NULL;
  }
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:LunaSDKService.FaceFountAttribute)
}

void FaceFountAttribute::SharedCtor() {
  ::memset(&rect_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&rect_)) + sizeof(score_));
}

FaceFountAttribute::~FaceFountAttribute() {
  // @@protoc_insertion_point(destructor:LunaSDKService.FaceFountAttribute)
  SharedDtor();
}

void FaceFountAttribute::SharedDtor() {
  if (this != internal_default_instance()) delete rect_;
  if (this != internal_default_instance()) delete warpiamge_;
}

void FaceFountAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FaceFountAttribute::descriptor() {
  ::protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaceFountAttribute& FaceFountAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_5fapi_2eproto::scc_info_FaceFountAttribute.base);
  return *internal_default_instance();
}


void FaceFountAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:LunaSDKService.FaceFountAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && rect_ != NULL) {
    delete rect_;
  }
  rect_ = NULL;
  if (GetArenaNoVirtual() == NULL && warpiamge_ != NULL) {
    delete warpiamge_;
  }
  warpiamge_ = NULL;
  score_ = 0;
  _internal_metadata_.Clear();
}

bool FaceFountAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LunaSDKService.FaceFountAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LunaSDKService.Rectangle rect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LunaSDKService.Image WarpIamge = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_warpiamge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LunaSDKService.FaceFountAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LunaSDKService.FaceFountAttribute)
  return false;
#undef DO_
}

void FaceFountAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LunaSDKService.FaceFountAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LunaSDKService.Rectangle rect = 1;
  if (this->has_rect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_rect(), output);
  }

  // double score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->score(), output);
  }

  // .LunaSDKService.Image WarpIamge = 3;
  if (this->has_warpiamge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_warpiamge(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LunaSDKService.FaceFountAttribute)
}

::google::protobuf::uint8* FaceFountAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LunaSDKService.FaceFountAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LunaSDKService.Rectangle rect = 1;
  if (this->has_rect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_rect(), deterministic, target);
  }

  // double score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->score(), target);
  }

  // .LunaSDKService.Image WarpIamge = 3;
  if (this->has_warpiamge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_warpiamge(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LunaSDKService.FaceFountAttribute)
  return target;
}

size_t FaceFountAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LunaSDKService.FaceFountAttribute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LunaSDKService.Rectangle rect = 1;
  if (this->has_rect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rect_);
  }

  // .LunaSDKService.Image WarpIamge = 3;
  if (this->has_warpiamge()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *warpiamge_);
  }

  // double score = 2;
  if (this->score() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FaceFountAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LunaSDKService.FaceFountAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceFountAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceFountAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LunaSDKService.FaceFountAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LunaSDKService.FaceFountAttribute)
    MergeFrom(*source);
  }
}

void FaceFountAttribute::MergeFrom(const FaceFountAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LunaSDKService.FaceFountAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rect()) {
    mutable_rect()->::LunaSDKService::Rectangle::MergeFrom(from.rect());
  }
  if (from.has_warpiamge()) {
    mutable_warpiamge()->::LunaSDKService::Image::MergeFrom(from.warpiamge());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void FaceFountAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LunaSDKService.FaceFountAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceFountAttribute::CopyFrom(const FaceFountAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LunaSDKService.FaceFountAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceFountAttribute::IsInitialized() const {
  return true;
}

void FaceFountAttribute::Swap(FaceFountAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaceFountAttribute::InternalSwap(FaceFountAttribute* other) {
  using std::swap;
  swap(rect_, other->rect_);
  swap(warpiamge_, other->warpiamge_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FaceFountAttribute::GetMetadata() const {
  protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageProccessingResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageProccessingResult::kFaceFountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageProccessingResult::ImageProccessingResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_5fapi_2eproto::scc_info_ImageProccessingResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LunaSDKService.ImageProccessingResult)
}
ImageProccessingResult::ImageProccessingResult(const ImageProccessingResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      facefounts_(from.facefounts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LunaSDKService.ImageProccessingResult)
}

void ImageProccessingResult::SharedCtor() {
}

ImageProccessingResult::~ImageProccessingResult() {
  // @@protoc_insertion_point(destructor:LunaSDKService.ImageProccessingResult)
  SharedDtor();
}

void ImageProccessingResult::SharedDtor() {
}

void ImageProccessingResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageProccessingResult::descriptor() {
  ::protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageProccessingResult& ImageProccessingResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_5fapi_2eproto::scc_info_ImageProccessingResult.base);
  return *internal_default_instance();
}


void ImageProccessingResult::Clear() {
// @@protoc_insertion_point(message_clear_start:LunaSDKService.ImageProccessingResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  facefounts_.Clear();
  _internal_metadata_.Clear();
}

bool ImageProccessingResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LunaSDKService.ImageProccessingResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .LunaSDKService.FaceFountAttribute FaceFounts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_facefounts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LunaSDKService.ImageProccessingResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LunaSDKService.ImageProccessingResult)
  return false;
#undef DO_
}

void ImageProccessingResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LunaSDKService.ImageProccessingResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .LunaSDKService.FaceFountAttribute FaceFounts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->facefounts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->facefounts(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LunaSDKService.ImageProccessingResult)
}

::google::protobuf::uint8* ImageProccessingResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LunaSDKService.ImageProccessingResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .LunaSDKService.FaceFountAttribute FaceFounts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->facefounts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->facefounts(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LunaSDKService.ImageProccessingResult)
  return target;
}

size_t ImageProccessingResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LunaSDKService.ImageProccessingResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .LunaSDKService.FaceFountAttribute FaceFounts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->facefounts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->facefounts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageProccessingResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LunaSDKService.ImageProccessingResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageProccessingResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageProccessingResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LunaSDKService.ImageProccessingResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LunaSDKService.ImageProccessingResult)
    MergeFrom(*source);
  }
}

void ImageProccessingResult::MergeFrom(const ImageProccessingResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LunaSDKService.ImageProccessingResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  facefounts_.MergeFrom(from.facefounts_);
}

void ImageProccessingResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LunaSDKService.ImageProccessingResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageProccessingResult::CopyFrom(const ImageProccessingResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LunaSDKService.ImageProccessingResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageProccessingResult::IsInitialized() const {
  return true;
}

void ImageProccessingResult::Swap(ImageProccessingResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageProccessingResult::InternalSwap(ImageProccessingResult* other) {
  using std::swap;
  CastToBase(&facefounts_)->InternalSwap(CastToBase(&other->facefounts_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageProccessingResult::GetMetadata() const {
  protobuf_test_5fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_5fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace LunaSDKService
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LunaSDKService::Image* Arena::CreateMaybeMessage< ::LunaSDKService::Image >(Arena* arena) {
  return Arena::CreateInternal< ::LunaSDKService::Image >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LunaSDKService::ImageProccesing* Arena::CreateMaybeMessage< ::LunaSDKService::ImageProccesing >(Arena* arena) {
  return Arena::CreateInternal< ::LunaSDKService::ImageProccesing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LunaSDKService::QualityFaceFountAttribute* Arena::CreateMaybeMessage< ::LunaSDKService::QualityFaceFountAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::LunaSDKService::QualityFaceFountAttribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LunaSDKService::HeadPoseFaceFountAttribute* Arena::CreateMaybeMessage< ::LunaSDKService::HeadPoseFaceFountAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::LunaSDKService::HeadPoseFaceFountAttribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LunaSDKService::Rectangle* Arena::CreateMaybeMessage< ::LunaSDKService::Rectangle >(Arena* arena) {
  return Arena::CreateInternal< ::LunaSDKService::Rectangle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LunaSDKService::FaceFountAttribute* Arena::CreateMaybeMessage< ::LunaSDKService::FaceFountAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::LunaSDKService::FaceFountAttribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LunaSDKService::ImageProccessingResult* Arena::CreateMaybeMessage< ::LunaSDKService::ImageProccessingResult >(Arena* arena) {
  return Arena::CreateInternal< ::LunaSDKService::ImageProccessingResult >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
